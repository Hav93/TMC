version: '3.8'

# TMC Docker Compose 配置
# 
# 版本说明：
# - test 分支默认使用 hav93/tmc:test 镜像（开发测试版本）
# - 如需使用稳定版本，设置环境变量: DOCKER_TAG=latest
#
# 使用方法：
#   测试版本（默认）: docker-compose up -d
#   稳定版本: DOCKER_TAG=latest docker-compose up -d
#   指定版本: DOCKER_TAG=v1.2.0 docker-compose up -d

services:
  tmc:
    image: hav93/tmc:${DOCKER_TAG:-test}  # 默认使用 test 标签，可通过环境变量切换
    container_name: tmc-${DOCKER_TAG:-test}  # 容器名称根据版本区分
    restart: always
    ports:
      - "${APP_PORT:-9393}:9393"
    environment:
      # 时区配置
      - TZ=${TZ:-Asia/Shanghai}
      
      # === Telegram 客户端配置（完全可选）===
      # 【推荐】通过 Web 界面为每个客户端单独配置，无需在此填写
      # 以下仅作为默认值，当客户端未单独配置时使用
      - API_ID=${API_ID:-}
      - API_HASH=${API_HASH:-}
      - BOT_TOKEN=${BOT_TOKEN:-}
      - PHONE_NUMBER=${PHONE_NUMBER:-}
      
      # 代理配置（可选，外网环境通常不需要）
      # 方式1：使用标准代理环境变量（推荐，自动解析）
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      # 方式2：使用详细配置（如果方式1不适用）
      - ENABLE_PROXY=${ENABLE_PROXY:-false}
      - PROXY_TYPE=${PROXY_TYPE:-http}
      - PROXY_HOST=${PROXY_HOST:-127.0.0.1}
      - PROXY_PORT=${PROXY_PORT:-7890}
      - PROXY_USERNAME=${PROXY_USERNAME:-}
      - PROXY_PASSWORD=${PROXY_PASSWORD:-}
      
      # 权限配置（NAS推荐，避免权限问题）
      # 如需自定义用户ID，请修改以下值或在 .env 中设置 PUID 和 PGID
      - PUID=1000
      - PGID=1000
      
      # 数据库配置
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/bot.db}
      
      # 日志级别
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    volumes:
      # 重要数据目录（建议使用绝对路径）
      - ${DATA_PATH:-./data}:/app/data              # 数据库和数据文件（重要）
      - ${LOGS_PATH:-./logs}:/app/logs              # 应用日志
      - ${SESSIONS_PATH:-./sessions}:/app/sessions  # Telegram会话文件（重要：登录状态）
      - ${TEMP_PATH:-./temp}:/app/temp              # 临时文件
      - ${CONFIG_PATH:-./config}:/app/config        # 配置文件目录
      
      # 媒体管理相关目录（v1.3.0 新增）
      - ${MEDIA_DOWNLOAD_PATH:-./media/downloads}:/app/media/downloads    # 媒体下载临时目录
      - ${MEDIA_STORAGE_PATH:-./media/storage}:/app/media/storage        # 媒体归档存储目录
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9393/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - tmc-network

networks:
  tmc-network:
    name: tmc-network
    driver: bridge
